name: Build and Deploy Node.js App1

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Get username
        run: |
          echo $USER

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t mouazmalik123/nodejsimages:latest .

      - name: Publish image to Docker Hub
        run: docker push mouazmalik123/nodejsimages:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key.pem
          chmod 600 ~/.ssh/private_key.pem
          ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.AWS_EC2_HOST }}

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/private_key.pem $EC2_USER@$EC2_HOST << 'EOF'
            docker pull mouazmalik123/nodejsimages:latest
            if [ $(docker ps -q -f name=nodejs-app-container) ]; then
              docker rm -f nodejs-app-container
            fi
            docker run -d -p 5000:5000 --name nodejs-app-container mouazmalik123/nodejsimages:latest
          EOF
        env:
          EC2_USER: ${{ secrets.AWS_EC2_USER }}
          EC2_HOST: ${{ secrets.AWS_EC2_HOST }}
